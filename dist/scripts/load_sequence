#!/usr/bin/perl

use Bio::Otter::DBSQL::DBAdaptor;
use Bio::Otter::QueryUser;
use Bio::SeqIO;

$| = 1;

my $OTTER_MYSQL_HOST = '127.0.0.1';
my $OTTER_MYSQL_PORT = '3377';
my $OTTER_MYSQL_USER = 'root';
my $OTTER_MYSQL_PASS = '';

my $query = new Bio::Otter::QueryUser(-host => $OTTER_MYSQL_HOST,
				      -user => $OTTER_MYSQL_USER,
				      -pass => $OTTER_MYSQL_PASS,
				      -port => $OTTER_MYSQL_PORT,
				      -dbname => 'mysql');

my $db = $query->query_for_database;

print "\nGot database $db\n";


print "\nConnecting to database\n\n";

my $db = new Bio::Otter::DBSQL::DBAdaptor(-host   => $OTTER_MYSQL_HOST,
					  -user   => $OTTER_MYSQL_USER,
					  -pass   => $OTTER_MYSQL_PASS,
					  -port   => $OTTER_MYSQL_PORT,
					  -dbname => $db);

print "\nEnter sequence file : ";

my $seqfile = <>;

chomp($seqfile);

open (IN,"<$seqfile");

my @seqs;

my $seqio = new Bio::SeqIO(-fh => \*IN,-format => 'fasta');

while (my $seq = $seqio->next_seq) {
    push(@seqs,$seq);
}

print "\nGot " .  scalar(@seqs) . " sequences\n";

print "\nThese sequences will be loaded in individually and a fake chromosome\n";
print "constructed with a gap of 5kb in between sequences.  Long sequences (>250kb)\n";
print "will be split into 250kb chunks\n";

# Once we have the sequences we can either :
#   -  Load them in as clone/contigs
#   -  Optionally split them if they are too long and create a fake assembly
#   -  Create a fake assembly
#   -  Read the fasta header and create an assembly from that
#   -  Download a piece of genome from kaka.

# For now let's just load in the clones and create a fake assembly

my $ass = $query->create_assembly($db);

#my $ass = $query->query_for_assembly($db); 

print "\nGot assembly $ass\n";

$db->assembly_type($ass);

$query->store_sequences($db,@seqs);

# This will take a fasta file  - read sequence or sequences

# Connect to mysql server and find which databases are available

# Ask the user which database to use

# Ask the user which assembly to call this sequence

# Ask the user whether a fake assembly should be created

# Write the sequence


