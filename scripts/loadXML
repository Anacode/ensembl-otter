#!/usr/bin/perl

use OtterDefs;
use Bio::Otter::DBSQL::DBAdaptor;
use Bio::Otter::Converter;
use Bio::Otter::DBSQL::StableIdAdaptor;

use strict;
my $stable_id = 0;

my %dbinfo   = %{$OTTER_SPECIES->{'human_9p12'}};
my %defaults = %{$OTTER_SPECIES->{'defaults'}};

my $db = new Bio::Otter::DBSQL::DBAdaptor(-host   => $dbinfo{HOST} || $defaults{HOST},
                                          -user   => $dbinfo{USER} || $defaults{USER},
                                          -pass   => $dbinfo{PASS} || $defaults{PASS},
                                          -port   => $dbinfo{PORT} || $defaults{PORT},
                                          -dbname => $dbinfo{DBNAME});

#my ($genes,$chr,$chrstart,$chrend,$type,$dna) = Bio::Otter::Converter::XML_to_otter(\*STDIN,$db);
my ($genes,$slice,$dna,$tiles) = Bio::Otter::Converter::XML_to_otter(\*STDIN,$db);

my $chr      = $slice->chr_name;
my $chrstart = $slice->chr_start;
my $chrend   = $slice->chr_end;
my $type     = $slice->assembly_type;

print "Chr $chr $chrstart $chrend $type " . length($dna) . "\n";

$db->assembly_type($type);

my $slice = $db->get_SliceAdaptor->fetch_by_chr_start_end($chr,$chrstart,$chrend);

my $analysis = new Bio::EnsEMBL::Analysis(-logic_name => 'otter');
$db->get_AnalysisAdaptor->store($analysis);

foreach my $gene (@$genes) {
  $gene->analysis($analysis);

  eval {
     $db->get_GeneAdaptor->attach_to_Slice($gene,$slice);
     if ($stable_id) {
       my $id = $db->get_StableIdAdaptor->_fetch_new_by_type('gene');
       print "Id $id\n";
       $gene->stable_id($id);
     }
     print "Gene " . $gene->stable_id . "\n";
   
  foreach my $tran (@{$gene->get_all_Transcripts}) {
     $tran->adaptor(undef);

     if (defined($tran->translation)) {
       print "Translate " . $tran->translate->seq . "\n";
     }
     if ($stable_id) {
       my $id = $db->get_StableIdAdaptor->_fetch_new_by_type('transcript');
       $tran->stable_id($id);
       print "Id $id\n";
     }
     print "Tran " . $tran->stable_id . "\n";
  }
  foreach my $exon (@{$gene->get_all_Exons}) {
     if ($stable_id) {
       my $id = $db->get_StableIdAdaptor->_fetch_new_by_type('exon');
       $exon->stable_id($id);
       print "Id $id\n";
     }
     print "Exon " . $exon->stable_id . "\n";
  }
      
  $db->get_GeneAdaptor->store($gene);
  };
  if ($@) {
     print "Problem loading gene " . $gene->gene_info->name->name . " [$@]\n";
  }

}


