#!/usr/local/bin/perl

use strict;

use Bio::Otter::DBSQL::DBAdaptor;
use Bio::Otter::DBSQL::AnnotatedGeneAdaptor;
use Bio::EnsEMBL::DBSQL::DBAdaptor;

use Bio::Otter::Author;
use Bio::Otter::AnnotatedGene;
use Bio::Otter::AnnotatedTranscript;
use Bio::Otter::TranscriptInfo;
use Bio::Otter::GeneInfo;
use Bio::Otter::GeneRemark;
use Bio::Otter::TranscriptRemark;
use Bio::Otter::TranscriptClass;

my $host    = '192.168.1.43';
my $user    = 'ensro';
my $pass    = undef;
my $dbname1 = 'steve_test_otter_chr6';

my $otter_host    = 'localhost';
my $otter_user    = 'root';
my $otter_pass    = undef;
my $otter_dbname  = 'steve_test_otter_chr6_with_annots';


my $ensdb = new Bio::EnsEMBL::DBSQL::DBAdaptor(-host => $host,
					       -user => $user,
					       -pass => $pass,
					       -port => 3306,
					       -dbname => $dbname1);


my $sgp = $ensdb->get_SliceAdaptor;

my $chr      = '6';
my $chrstart = 1;
my $chrend   = 20000000;

use Bio::Otter::Converter;

my $vcontig = $sgp->fetch_by_chr_start_end($chr,$chrstart,$chrend);

print "<otter>\n";
print "<sequenceset>\n";


my @path  = $vcontig->get_tiling_path;

my $xmlstr = Bio::Otter::Converter::path_to_XML($chr,$chrstart,$chrend,@path); 

print $xmlstr . "\n";


print "</sequenceset>\n";




my @genes = $vcontig->get_all_Genes;

my $author1 = new Bio::Otter::Author(-name => 'michele',
                                    -email => 'michele@sanger.ac.uk');

my $author2 = new Bio::Otter::Author(-name => 'birney',
                                    -email => 'birney@ebi.ac.uk');

my $author3 = new Bio::Otter::Author(-name => 'james',
                                    -email => 'james@sanger.ac.uk');


my @author = ($author1,$author2,$author3);

my $remark1 = new Bio::Otter::GeneRemark(-remark => "This is the first remark");
my $remark2 = new Bio::Otter::GeneRemark(-remark => "This is the second remark");
my $remark3 = new Bio::Otter::GeneRemark(-remark => "This is the third remark");
my $remark4 = new Bio::Otter::GeneRemark(-remark => "This is the fourth remark");

my $tremark1 = new Bio::Otter::TranscriptRemark(-remark => "first remark");
my $tremark2 = new Bio::Otter::TranscriptRemark(-remark => "second remark");
my $tremark3 = new Bio::Otter::TranscriptRemark(-remark => "third remark");
my $tremark4 = new Bio::Otter::TranscriptRemark(-remark => "fourth remark");

my @remarks  = ($remark1,$remark2,$remark3);
my @tremarks = ($tremark1,$tremark2,$tremark3,$tremark4);

my @class = (new Bio::Otter::TranscriptClass(-name => 'CDS',
                                             -description => 'desc1'),
	     new Bio::Otter::TranscriptClass(-name => 'cDNA',
                                             -description => 'desc2'),
	     new Bio::Otter::TranscriptClass(-name => 'pseudogene',
                                             -description => 'desc3'));


my $num  = 0;
my $tnum = 0;

foreach my $gene (@genes) {
    my $newgene = bless $gene,"Bio::Otter::AnnotatedGene";


    my $author   = $author[$num%3];
    my $gremark  = $remarks[$num%3];

    my $geneinfo = new Bio::Otter::GeneInfo(-gene_stable_id  => $gene->stable_id,
					     -author    => $author,
					     -remark    => [( $gremark )]);

    $gene->gene_info($geneinfo);

    $num++;
    foreach my $tran ($gene->get_all_Transcripts) {
	bless $tran, "Bio::Otter::AnnotatedTranscript";

	my $tremark  = $tremarks[$num%4];

	my $ti = Bio::Otter::TranscriptInfo->new(
	-stable_id => $tran->stable_id,
	-class => $class[$tnum%3],
	-cds_start_not_found => 1,
	-cds_end_not_found => 0,
	-mrna_start_not_found => 1,
	-mrna_end_not_found => 0,
	-author => $author,
	-remark => [($tremarks[$tnum%4])]);

	$tran->transcript_info($ti);
	
	$tnum++;

        # These lines force loads from the database to stop attempted lazy 
        # loading during the write (which fail because they are to the wrong
        # db) 
        my $get = $tran->translation;
        foreach my $exon ($tran->get_all_Exons) {
          $exon->stable_id;
        }
    }

# Transform gene to raw contig coords
#    $gene->transform;

    print $gene->toXMLString(),"\n";

    #$oaga->store($gene);
}


print "</otter>\n";
