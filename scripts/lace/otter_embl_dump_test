#!/usr/local/bin/perl -w

### otter_embl_dump_test

=pod

=head1 NAME - otter_embl_dump_test

=head1 COMMAND LINE PARAMETERS

Required parameters
  -dataset              
  -chrlibrary_name
  
Optional parameters
  -h|--help

=head1 DESCRIPTION

Test script to for dumping of EMBL files from an
Otter database containing finished genomic sequence
annotation.

The principal module used for the dumping is
Bio::Otter::EMBL::Factory.pm, which creates of the
classes Hum::EMBL::Exon, and Hum::EMBL::ExonCollection
from the retrieved data.

=cut

use strict;

use Bio::Otter::Lace::Defaults;
use Bio::Otter::EMBL::Factory;
use Carp;

{
    my $dataset_name = undef;
    my $sequence_set = undef;
    
    my $usage = sub { exec('perldoc', $0) };
    Bio::Otter::Lace::Defaults::do_getopt(
        'h|help!'   => $usage,
        'dataset=s' => \$dataset_name,
        'chr|set=s' => \$sequence_set,
        ) or $usage->();
    $usage->() unless $dataset_name and $sequence_set;

    # Connect to Ensembl/Otter database and fetch adaptors
    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    my $ds = $cl->get_DataSet_by_name($dataset_name); #Bio::Otter::Lace::DataSet

    my $otter_db = $ds->get_cached_DBAdaptor; #Bio::EnsEMBL::Container
    $otter_db->assembly_type($sequence_set);  #e.g. 'chr1-07'
    
    my $ft_factory = Bio::Otter::EMBL::Factory->new;
    $ft_factory->DataSet($ds);
    
    foreach my $acc (@ARGV) {
        
        my ($accession, $seq_version) = $acc =~ /(^.*)\.(\d+)/ 
            or confess "Error parsing accession and version for: $acc\n";
        
        $ft_factory->entry_name($accession);
        $ft_factory->data_class('standard');
        $ft_factory->mol_type('genomic DNA');
        $ft_factory->division('HUM');
        $ft_factory->seq_length(10000);
        $ft_factory->ac_star_id('FAKE');
        $ft_factory->organism('Homo sapiens');
        $ft_factory->clone_lib('to_be_provided');
        $ft_factory->clone_name('to_be_provided_2');
        $ft_factory->keywords('HTG');

        my $embl = $ft_factory->embl_setup($accession, $seq_version);
        $ft_factory->make_embl_ft($accession, $embl, $seq_version);
        print $embl->compose();
    }
}

sub make_embl {
    my( $pdmp ) = @_;

    my $project     = $pdmp->project_name;
    my $acc         = $pdmp->accession || '';
    my @sec         = $pdmp->secondary;
    my $embl_id     = $pdmp->embl_name || 'ENTRYNAME';
    my $species     = $pdmp->species;
    my $chr         = $pdmp->chromosome;
    my $map         = $pdmp->fish_map;
    my $ext_clone   = $pdmp->external_clone_name;
    my $binomial    = $pdmp->species_binomial;
    my $division    = $pdmp->EMBL_division;

    # Get the DNA, base quality string,
    # and map of contig positions.
    my($dna, $base_quality, $contig_map) = $pdmp->embl_sequence_and_contig_map;
    my $seqlength = length($dna);

    # New embl file object
    my $embl = Hum::EMBL->new();

    # ID line
    my $id = $embl->newID;
    $id->entryname($embl_id);
    $id->dataclass('standard');
    $id->molecule('genomic DNA');
    $id->division($division);
    $id->seqlength($seqlength);
    $embl->newXX;

    # AC line
    my $ac = $embl->newAC;
    if (@sec) {
        $ac->secondaries(@sec);
        # We need the placeholder "ACCESSION"
        # if we don't have an accession
        $ac->primary($acc || 'ACCESSION');
    } else {
        $ac->primary($acc);
    }
    $embl->newXX;

    # AC * line
    my $ac_star = $embl->newAC_star;
    $ac_star->identifier($pdmp->sanger_id);
    $embl->newXX;

    # Making Bio::Otter::EMBL::Factory object
    # As required to be able to get DE and KW information for for clone
    my $ft_factory = $pdmp->make_ft_factory();
    
    # DE line
    $pdmp->add_Description($embl, $ft_factory);
    
    # KW line
    $pdmp->add_Keywords($embl, $ft_factory);

    # Organism
    add_Organism($embl, $species);
    $embl->newXX;

    # Reference
    $pdmp->add_Reference($embl, $seqlength);

    # CC lines
    $pdmp->add_Headers($embl, $contig_map);
    $embl->newXX;

    # Feature table header
    $embl->newFH;

    # Feature table source feature
    my( $libraryname ) = library_and_vector( $project );
    add_source_FT( $embl, $seqlength, $binomial, $ext_clone,
                   $chr, $map, $libraryname );

    # Feature table assembly fragments
    $pdmp->add_FT_entries($embl, $ft_factory);
    $embl->newXX;

    # Sequence
    $embl->newSequence->seq($dna);

    # Base Quality
    $embl->newBQ_star->quality($base_quality) if $base_quality;

    $embl->newEnd;

    return $embl;
}


__END__

=head1 NAME - otter_embl_dump_test

=head1 EXAMPLE

  otter_embl_dump_test -dataset human -chr chr1-07 AC114498.2 AL669831.13
  otter_embl_dump_test -dataset human -chr chr11-hsa11_20040402 Z83307 Z95332

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk
Mike Croning B<email> mdr@sanger.ac.uk
