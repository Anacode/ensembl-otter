#!/usr/local/bin/perl -w

### modify_sequence_set

use strict;

use Bio::Otter::Lace::Defaults;

{
    my $priority          = 0;
    my $author            = (getpwuid($<))[0];
    my $description       = undef;   # "This is a default description, created by $author";
    my $dataset_name      = 'human'; # dataset to get from otter server
    my $set_name          = undef;
    my $delete            = undef;
    my $help              = 0;
    
    #---------------------------------------------------------------------------
    Bio::Otter::Lace::Defaults::do_getopt(
        'dataset=s'     => \$dataset_name,
	'h|help'        => \$help,
        'description=s' => \$description,
        'priority=i'    => \$priority,
        'set|name=s'    => \$set_name,
	'delete'        => \$delete
        );
    useage() if $help;

    die "you need to give the set name as an argument" if (! defined $set_name);

    # make otter client and connect to database
    my $cl       = Bio::Otter::Lace::Defaults::make_Client();
    my $ds       = $cl->get_DataSet_by_name($dataset_name);
    my $otter_db = $ds->get_cached_DBAdaptor;

    my $SequenceSet = $ds->get_SequenceSet_by_name($set_name);

    if($description || $priority){ # if we're updating
	print STDERR "Changing from:\n";
	print STDERR join("  |  ", $SequenceSet->name, $SequenceSet->description, $SequenceSet->priority) . "\nto:\n";
	$description ||= $SequenceSet->description();
	$priority ||= $SequenceSet->priority();
	$SequenceSet->description($description);
	$SequenceSet->priority($priority);
	$ds->update_SequenceSet($SequenceSet);
	print STDERR join("  |  ", $SequenceSet->name, $SequenceSet->description, $SequenceSet->priority) . "\n";
    }elsif($delete){
	$ds->delete_SequenceSet($SequenceSet);
    }

}

sub useage{ exit(exec('perldoc', $0)); }

__END__

=head1 NAME - modify_sequence_set

=head1 AUTHOR

Roy Storey,,,, B<email> rds@sanger.ac.uk

