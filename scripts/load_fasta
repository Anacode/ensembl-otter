#!/usr/local/bin/perl

$| = 1;

use strict;
use Getopt::Long;

use Bio::EnsEMBL::DBSQL::DBAdaptor;
use Bio::EnsEMBL::Clone;
use Bio::EnsEMBL::RawContig;
use Bio::SeqIO;

my $otterhost     = 'ecs2b';
my $otteruser     = 'ensadmin';
my $otterpass     = 'ensembl';
my $otterport     = 3306;
my $ottername     = 'otter_chr6';

my $fastafile;

&GetOptions( 'otterhost:s'    => \$otterhost,
             'otteruser:s'    => \$otteruser,
             'otterpass:s'    => \$otterpass,
             'otterport:s'    => \$otterport,
             'ottername:s'    => \$ottername,
             'fastafile:s'    => \$fastafile,
            );

my $db = new Bio::EnsEMBL::DBSQL::DBAdaptor(-host => $otterhost,
					   -user => $otteruser,
					   -pass => $otterpass,
					   -port => $otterport,        
					   -dbname => $ottername);


my $time = time;

if ($fastafile) {
   open (IN,"<$fastafile");
   my $seqio = new Bio::SeqIO(-fh => \*IN,-format => 'fasta');

   
   while (my $seq = $seqio->next_seq) {
    my $contigid = $seq->id;

    my $desc = $seq->desc;
    my $clone;
    my $embl_version;
    my $embl_id;
    my $version;
    my $htg;

    if ($desc =~ /clone_id +(\S+)/) {
       $clone = $1;
    } else {
       print "ERROR: No clone in description [$desc]\n";
    }
    if ($desc =~ /version +(\S+)/) {
       $version = $1;
    } else {
       print "ERROR: No version in description [$desc]\n";
    }
    if ($desc =~ /embl_version +(\S+)/) {
       $embl_version = $1;
    } else {
       print "ERROR: No embl version in description [$desc]\n";
    }
    if ($desc =~ /htg_phase +(\S+)/) {
       $htg = $1;
    } else {
       print "ERROR: No htg_phase in description [$desc]\n";
    }
    if ($desc =~ /embl_id +(\S+)/) {
       $embl_id = $1;
    } else {
       print "ERROR: No embl_id in description [$desc]\n";
    }



   # Create clone

    my $clone = new Bio::EnsEMBL::Clone();
    $clone->id($clone);
    $clone->embl_id($clone);
    $clone->version($version);
    $clone->embl_version($embl_version);
    $clone->htg_phase($htg);
    $clone->created($time);
    $clone->modified($time);


    # Create contig

    my $contig = new Bio::EnsEMBL::RawContig;

    $contig->name($contigid);
    $contig->clone($clone);
    $contig->embl_offset(1);
    $contig->length($seq->length);
    $contig->seq($seq->seq);

    $clone->add_Contig($contig);
    
    $db->get_CloneAdaptor->store($clone);
  }
}
