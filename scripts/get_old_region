#!/usr/local/bin/perl

$| = 1;

use strict;
use Getopt::Long;

use Bio::EnsEMBL::DBSQL::DBAdaptor;
use Bio::Otter::OldConverter;

my $otterhost     = 'ecs1b';
my $otteruser     = 'ensro';
my $otterpass     = '';
my $otterport     = 3306;
my $ottername     = 'human_chr6_fin';

my $chr           = 'chr6';
my $chrstart      = 1;
my $chrend        = 1000000;

my $type          = 'SANGER_02';
my $fastafile;
my $xmlfile;

&GetOptions( 'otterhost:s'    => \$otterhost,
             'otteruser:s'    => \$otteruser,
             'otterpass:s'    => \$otterpass,
             'otterport:s'    => \$otterport,
             'ottername:s'    => \$ottername,
             'fastafile:s'    => \$fastafile,
             'xmlfile:s'      => \$xmlfile,
             'chr:s'          => \$chr,
             'chrstart:n'     => \$chrstart,
             'chrend:n'       => \$chrend,
	     'type:s'         => \$type);

my $db = new Bio::EnsEMBL::DBSQL::DBAdaptor(-host => $otterhost,
					   -user => $otteruser,
					   -pass => $otterpass,
					   -port => $otterport,        
					   -dbname => $ottername);


$db->static_golden_path_type($type);

my $sga  = $db->get_StaticGoldenPathAdaptor;

my $contig = $sga->fetch_VirtualContig_by_chr_start_end($chr,$chrstart,$chrend);


if ($xmlfile) {
  my $xmlstr = Bio::Otter::OldConverter::VirtualContig_to_XML($contig,$db,0);

  open(IN,">$xmlfile");
  print IN $xmlstr . "\n";
}

if ($fastafile) {
  open(OUT,">$fastafile");

  foreach my $contig ($contig->_vmap->each_MapContig) {
   my $cloneid = $contig->contig->cloneid;
   my $clone = $db->get_Clone($cloneid);

   print OUT ">" . $contig->contig->id . " clone_id " . $clone->id . " clone_version " . $clone->version . " embl_id " . $clone->embl_id . " embl_version " . $clone->embl_version . " htg_phase " . $clone->htg_phase. "\n";
   my $seq = $contig->contig->seq;
   $seq =~ s/(.{72})/$1\n/g;
   print OUT $seq . "\n";
  }
}
